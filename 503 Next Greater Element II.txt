503. Next Greater Element II

Given a circular integer array nums (i.e., the next element of nums[nums.length - 1] is nums[0]), return the next greater number for every element in nums.

The next greater number of a number x is the first greater number to its traversing-order next in the array, which means you could search circularly to find its next greater number. If it doesn't exist, return -1 for this number.

 

Example 1:

Input: nums = [1,2,1]
Output: [2,-1,2]
Explanation: The first 1's next greater number is 2; 
The number 2 can't find next greater number. 
The second 1's next greater number needs to search circularly, which is also 2.
Example 2:

Input: nums = [1,2,3,4,3]
Output: [2,3,4,-1,4]


Solution 

class Solution:
    def nextGreaterElements(self, nums: List[int]) -> List[int]:
        stack = []
        for i in range(len(nums)):
            for j in range(i,len(nums)):
                flag = 0 
                if j <len(nums)-1 and  nums[i] < nums[j+1]:
                    stack.append(nums[j+1])
                    flag = 1
                    break
            if flag == 0:
                for k in range(i+1):
                    if k < len(nums)-1  and  nums[i] < nums[k]:
                        stack.append(nums[k])
                        break
                    elif k == i:
                        stack.append(-1)



        return(stack)