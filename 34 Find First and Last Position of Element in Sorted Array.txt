34. Find First and Last Position of Element in Sorted Array

Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.

If target is not found in the array, return [-1, -1].

You must write an algorithm with O(log n) runtime complexity.

 

Example 1:

Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]
Example 2:

Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1]
Example 3:

Input: nums = [], target = 0
Output: [-1,-1]

Solution 

class Solution:
    def searchRange(self, nums: List[int], target: int) -> List[int]:
        def search(nums, target,left=True):
            i = 0
            j = len(nums)
            while i < j:
                mid = (i+j)//2
                if nums[mid]== target:
                    if left:
                        j = mid
                    else:
                        i = mid+1
                elif nums[mid]< target:
                    i = mid+1
                else:
                    j = mid
            return(i)

        l = search(nums,target, True)
        r = search(nums,target,False)
        if not nums:
            return([-1,-1])

        elif l< len(nums) and nums[l] == target:
            return([l,r-1])
        else:
            return([-1,-1])
