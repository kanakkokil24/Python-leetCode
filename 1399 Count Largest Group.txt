1399. Count Largest Group

You are given an integer n.

Each number from 1 to n is grouped according to the sum of its digits.

Return the number of groups that have the largest size.

 

Example 1:

Input: n = 13
Output: 4
Explanation: There are 9 groups in total, they are grouped according sum of its digits of numbers from 1 to 13:
[1,10], [2,11], [3,12], [4,13], [5], [6], [7], [8], [9].
There are 4 groups with largest size.
Example 2:

Input: n = 2
Output: 2
Explanation: There are 2 groups [1], [2] of size 1.

Solution 


class Solution:
    def countLargestGroup(self, n: int) -> int:
        from collections import defaultdict
        dict1 = defaultdict(list)
        for x in range(1,n+1):
            y =list(str(x))
            sum1 = 0
            for z in y:
                sum1 = sum1+int(z)
            dict1[sum1].append(x)
        max_length = max([len(dict1.get(x)) for x in dict1])
        count = sum(len(dict1.get(x)) == max_length for x in dict1)
        return(count)

        