1704. Determine if String Halves Are Alike

You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.

Two strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains uppercase and lowercase letters.

Return true if a and b are alike. Otherwise, return false.

 

Example 1:

Input: s = "book"
Output: true
Explanation: a = "bo" and b = "ok". a has 1 vowel and b has 1 vowel. Therefore, they are alike.

Solution

class Solution:
    def halvesAreAlike(self, s: str) -> bool:
        length = len(s)
        half = length//2
        a = s[:half]
        b = s[half:]
        vowel = 'aeiouAEIOUU'
        count_a = 0
        count_b = 0
        for i in range(half):
            if a[i] in vowel:
                count_a= count_a+1
            if b[i] in vowel:
                count_b = count_b+1
        if count_a == count_b:
            return(True)
        else:
            return(False)